{"version":3,"sources":["components/Statistics/Statistics.module.css","components/container/Container.module.css","components/Feedback/Feedback.module.css","components/ButtonsFeedback/ButtonsFeedback.module.css","components/container/Container.jsx","components/ButtonsFeedback/ButtonsFeedback.jsx","components/Statistics/Statistics.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","ButtonsFeedback","string","options","onLeaveFeedback","console","log","charAt","toUpperCase","slice","customBtn","map","option","btn","type","onClick","Statistics","good","neutral","bad","total","positiveFeedback","feedback","title","list","item","Notification","message","Feedback","useState","setGoog","setNeutral","setBed","countTotalFeedback","value","feedbackButtonElement","prevState","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,2B,gBCA3FD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,0B,kBCAhED,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,+B,+HCGvE,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,2BCDjCI,EAAkB,SAAC,GAAkC,IAG1BC,EAHNC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBASlC,OAFFC,QAAQC,KAJyBJ,EAIC,OAHpBK,OAAO,GAAGC,cAAgBN,EAAOO,MAAM,IAMjD,qBAAKX,UAAWC,IAAEW,UAAlB,SACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,wBACEd,UAAWC,IAAEc,IACbC,KAAK,SAELC,QAAS,kBAAMX,EAAgBQ,IAJjC,SAMGA,GAHIA,S,gBCdTI,EAAa,SAAC,GAMb,IAAD,IALJC,YAKI,MALG,EAKH,MAJJC,eAII,MAJM,EAIN,MAHJC,WAGI,MAHE,EAGF,MAFJC,aAEI,MAFI,EAEJ,MADJC,wBACI,MADe,EACf,EACJ,OACE,sBAAKvB,UAAWC,IAAEuB,SAAlB,UACE,oBAAIxB,UAAWC,IAAEwB,MAAjB,wBACA,qBAAIzB,UAAWC,IAAEyB,KAAjB,UACE,qBAAI1B,UAAWC,IAAE0B,KAAjB,mBAA8BR,KAC9B,qBAAInB,UAAWC,IAAE0B,KAAjB,sBAAiCP,KACjC,qBAAIpB,UAAWC,IAAE0B,KAAjB,kBAA6BN,KAC7B,qBAAIrB,UAAWC,IAAE0B,KAAjB,oBAA+BL,KAC/B,qBAAItB,UAAWC,IAAE0B,KAAjB,gCAA2CJ,EAA3C,cCjBR,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,kCAAKA,EAAL,O,oBCMT,SAASC,IACP,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAGMC,EAAqB,WACzB,OAAOhB,EAAOC,EAAUC,GA+B1B,OACE,sBAAKrB,UAAWC,IAAEuB,SAAlB,UACE,oBAAIxB,UAAWC,IAAEwB,MAAjB,oCAEA,cAAC,EAAD,CACEzB,UAAWC,IAAEW,UACbP,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7BgB,SAAA8B,GACpB,IAAMC,EAAyB,SAAAC,GAAS,OAAIA,EAAY,GAExD,OAAQF,GACN,IAAK,OACHJ,EAAQK,GACR,MAEF,IAAK,UACHJ,EAAWI,GACX,MAEF,IAAK,MACHH,EAAOG,GACP,MAEF,QAAS,WAgBT,kCAC4B,IAAzBF,IACC,cAACP,EAAD,CAAcC,QAAQ,sBAEtB,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,iBA7CDgB,KAAKC,MAAc,IAAPrB,EAAcgB,MAAyB,SCf/C,SAASM,IACtB,OACE,cAAC3C,EAAD,CAAWE,UAAWC,IAAEC,UAAxB,SACE,cAAC4B,EAAD,MCJNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.113d803d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__wtKLz\",\"list\":\"Statistics_list__2rSZs\",\"item\":\"Statistics_item__2Ojh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__LhYRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__n4DRH\",\"title\":\"Feedback_title__T6DXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customBtn\":\"ButtonsFeedback_customBtn__2-Jjk\",\"btn\":\"ButtonsFeedback_btn__9YvjT\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { Container };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ButtonsFeedback.module.css';\r\n\r\nconst ButtonsFeedback = ({ options, onLeaveFeedback }) => {\r\n\r\n//заглавная буква\r\n  function capitalizeFirstLetter(string) {\r\nreturn string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconsole.log(capitalizeFirstLetter('foo')); // Foo\r\n\r\n  return (\r\n    <div className={s.customBtn}>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.btn}\r\n          type=\"button\"\r\n          key={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nButtonsFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ButtonsFeedback };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({\r\n  good = 0,\r\n  neutral = 0,\r\n  bad = 0,\r\n  total = 0,\r\n  positiveFeedback = 0,\r\n}) => {\r\n  return (\r\n    <div className={s.feedback}>\r\n      <h2 className={s.title}>Statistics</h2>\r\n      <ul className={s.list}>\r\n        <li className={s.item}>Good: {good}</li>\r\n        <li className={s.item}>Neutral: {neutral}</li>\r\n        <li className={s.item}>Bad: {bad}</li>\r\n        <li className={s.item}>Total: {total}</li>\r\n        <li className={s.item}>Positive Feedback: {positiveFeedback}%</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport { Statistics };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p> {message} </p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Notification };\r\n","//import React from 'react';\r\nimport { useState } from 'react';\r\n\r\n//components\r\nimport { ButtonsFeedback } from 'components/ButtonsFeedback/ButtonsFeedback';\r\nimport { Statistics } from 'components/Statistics/Statistics';\r\nimport { Notification } from 'components/Feedback/Notification/Notification';\r\nimport s from './Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Feedback() {\r\n  const [good, setGoog] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBed] = useState(0);\r\n\r\n  //количество кликов\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  // % ответов\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback()) || 0;\r\n  };\r\n\r\n  // +1 при нажатии\r\n  const leaveFeedback = value => {\r\n    const feedbackButtonElement = (prevState => prevState + 1);\r\n\r\n    switch (value) {\r\n      case 'good':\r\n        setGoog(feedbackButtonElement);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(feedbackButtonElement);\r\n        break;\r\n      \r\n      case 'bad':\r\n        setBed(feedbackButtonElement);\r\n        break;\r\n      \r\n      default: return;\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className={s.feedback}>\r\n      <h1 className={s.title}>Please leave feedback </h1>\r\n\r\n      <ButtonsFeedback\r\n        className={s.customBtn}\r\n        options={[\"good\", \"neutral\", \"bad\"]}\r\n        onLeaveFeedback={leaveFeedback}\r\n      />\r\n\r\n      <section>\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positiveFeedback={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFeedback.propTypes = {\r\n  Good: PropTypes.number,\r\n  Neutral: PropTypes.number,\r\n  Bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\n\r\nexport { Feedback };\r\n","import React from 'react';\r\n//components\r\nimport { Container } from './components/container/Container';\r\nimport { Feedback } from './components/Feedback/Feedback';\r\n//css\r\nimport s from 'components/container/Container.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container className={s.container}>\r\n      <Feedback />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './not/reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n//reportWebVitals();\r\n"],"sourceRoot":""}